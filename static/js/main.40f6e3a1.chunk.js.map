{"version":3,"sources":["store/index.js","image/loader_image.png","Components/LoaderView/index.jsx","Components/SearchBar/index.jsx","pages/Home/index.jsx","Components/Pagination/index.jsx","pages/Results/index.jsx","image/logo.png","Components/ModalChar/index.jsx","pages/main.jsx","App.js","index.js"],"names":["DataContext","React","createContext","DataContextProvider","props","useState","active","setActive","charName","setCharName","characters","setCharacters","infos","setInfos","pages","setPages","data","setData","loader","setLoader","errpApi","setErroApi","Provider","value","hadleClick","charNameSearch","fetch","method","headers","body","JSON","stringify","query","then","res","json","results","info","catch","NewPage","numberPerPage","children","LoaderView","className","src","ImgLoader","alt","height","width","SearchBar","useContext","placeholder","onChange","e","target","onClick","Home","NumbPages","numbers","arr","i","push","pagesT","map","item","Results","char","id","character","image","name","species","Pagination","ModalChar","episode","LastLocation","location","residents","LocationResidents","origin","OriginResidents","dimension","OriginDimension","LocationDimension","last","pop","gender","status","air_date","length","Main","Logo","exact","path","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40f6e3a1.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nconst DataContext = React.createContext()\r\n\r\n\r\nfunction DataContextProvider(props) {\r\n\r\n  const [active, setActive] = useState(true)\r\n    const [charName, setCharName] = useState([])\r\n    const [characters, setCharacters] = useState([])\r\n    const [infos, setInfos] = useState([])\r\n    const [pages, setPages] = useState()\r\n    const [data,setData] = useState([])\r\n    const [Newpages, setPagesNew] = useState([1])\r\n\r\n\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [errpApi, setErroApi] = useState(false)\r\n\r\n  \r\n\r\n\r\n    const hadleClick = (charNameSearch) => {\r\n      if(charNameSearch != null){\r\n        setLoader(true)\r\n        fetch(\"https://rickandmortyapi.com/graphql\", {\r\n          method: 'POST',\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            query: `\r\n              query {\r\n                  characters(page: 1, filter: { name: \"${charNameSearch}\" }) {\r\n                  info {\r\n                      count\r\n                      pages\r\n                      next\r\n                  }\r\n                  results {\r\n                      id\r\n                    name\r\n                    status\r\n                    species\r\n                    gender\r\n                    image\r\n                  }\r\n                  }\r\n                  location(id: 1) {\r\n                  id\r\n                  }\r\n                  episodesByIds(ids: [1, 2]) {\r\n                  id\r\n                  }\r\n              }\r\n            `\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          \r\n          setInfos(data.data.characters.results)\r\n          setPages(data.data.characters.info.pages)\r\n          setCharacters(charNameSearch)\r\n          setLoader(false)\r\n          \r\n        })\r\n        .catch(() => {\r\n          setLoader(false)\r\n          setErroApi(true)\r\n        })\r\n      }\r\n  }\r\n\r\n  const NewPage = (numberPerPage) => {\r\n    setLoader(true)\r\n        fetch(\"https://rickandmortyapi.com/graphql\", {\r\n          method: 'POST',\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            query: `\r\n              query {\r\n                  characters(page: ${numberPerPage}, filter: { name: \"${characters}\" }) {\r\n                  info {\r\n                      count\r\n                      pages\r\n                      next\r\n                  }\r\n                  results {\r\n                      id\r\n                    name\r\n                    status\r\n                    species\r\n                    gender\r\n                    image\r\n                  }\r\n                  }\r\n                  location(id: 1) {\r\n                  id\r\n                  }\r\n                  episodesByIds(ids: [1, 2]) {\r\n                  id\r\n                  }\r\n              }\r\n            `\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          \r\n          setInfos(data.data.characters.results)\r\n          setLoader(false)\r\n        })\r\n        .catch(() => {\r\n          setLoader(false)\r\n          setErroApi(true)\r\n        })\r\n\r\n  }\r\n\r\n  \r\n\r\n    return (\r\n        <DataContext.Provider value={{charName, setCharName, hadleClick, infos, loader, errpApi, pages, NewPage, active, setActive, data,setData ,setLoader}}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport {DataContextProvider, DataContext}\r\n","export default __webpack_public_path__ + \"static/media/loader_image.53b3d351.png\";","import React from 'react';\r\nimport ImgLoader from '../../image/loader_image.png';\r\n\r\nconst LoaderView = () => {\r\n    \r\n    return (\r\n        <>\r\n           \r\n            <div className=\"loader-view\">\r\n                <div className=\"centralize\">\r\n                    <img src={ImgLoader} alt=\"\" height={250} width={184}/>\r\n                        <p>Loading</p>\r\n                </div>\r\n            </div>\r\n                \r\n                \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LoaderView;","import React,{useContext} from 'react';\r\nimport {DataContext} from '../../store';\r\n\r\nconst SearchBar = () => {\r\n    const {charName, setCharName, hadleClick} = useContext(DataContext)\r\n    return (\r\n        <div className=\"search\">\r\n                    <input \r\n                placeholder=\"type character name\"\r\n                value={charName}\r\n                onChange={(e) => setCharName(e.target.value)} \r\n            />\r\n            <button onClick={() => hadleClick(charName)}>\r\n                Search\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBar;","import React, {useContext, useState} from 'react'\r\nimport {DataContext} from '../../store';\r\nimport LoaderView from '../../Components/LoaderView';\r\nimport SearchBar from '../../Components/SearchBar';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <div className={`home`}>\r\n                <SearchBar />\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Home;","import React, {useContext, useState} from 'react';\r\nimport {DataContext} from '../../store';\r\n\r\nconst NumbPages = () => {\r\n    const {pages, NewPage} = useContext(DataContext)\r\n\r\n    const [numbers] = useState(pages)\r\n    var arr = []\r\n\r\n    const pagesT = () => {\r\n        if( numbers > 1){\r\n            for(var i = 1; i <= numbers; i++) {\r\n               arr.push(i)\r\n            }\r\n        }\r\n    }\r\n    pagesT()\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"pages\">\r\n            <ul>\r\n               {arr.map(item => {\r\n                   return(\r\n                    <li \r\n                        key={item} \r\n                        onClick={ () => NewPage(item)}\r\n                    >\r\n                            {item}\r\n                    </li>\r\n                   )\r\n               })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NumbPages;","import React, {useContext} from 'react';\r\nimport {DataContext} from '../../store';\r\nimport Pagination from '../../Components/Pagination';\r\nimport SearchBar from '../../Components/SearchBar';\r\n\r\n\r\nconst Results = () => {\r\n\r\n    \r\n    const {infos, active, setActive, data,setData} = useContext(DataContext)\r\n    \r\n\r\n    const ClickDetails = (id) => {\r\n        fetch(\"https://rickandmortyapi.com/graphql\", {\r\n                    method: 'POST',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                      query: `\r\n                        query {\r\n                            character(id: ${id}){\r\n                                id\r\n                                name\r\n                                status\r\n                                gender\r\n                                species\r\n                                origin{\r\n                                    id\r\n                                    name\r\n                                    type\r\n                                    dimension\r\n                                    residents{\r\n                                    id\r\n                                    name\r\n                                    }\r\n                            \r\n                                }\r\n                                location{\r\n                                    id\r\n                                    name\r\n                                    type\r\n                                    dimension\r\n                                    residents{\r\n                                    id\r\n                                    name\r\n                                    }\r\n                                }\r\n                                image\r\n                                episode{\r\n                                    id\r\n                                    name\r\n                                    air_date\r\n                                    episode\r\n                                }\r\n                            }\r\n                    }\r\n                `\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setData(data.data.character)\r\n            setActive(false)\r\n        })\r\n        \r\n    }\r\n\r\n                            \r\n \r\n\r\n    return(\r\n        <div className=\"results\">\r\n            <SearchBar />\r\n            <div className=\"results-content\">\r\n                {\r\n                    infos.map( char => {\r\n                        return(\r\n                            <div key={char.id} className=\"card\" onClick={() => ClickDetails(char.id)}>\r\n                                <img src={char.image} alt={char.name}/>\r\n                                <div className=\"content\">\r\n                                    <h3>\r\n                                        {char.name}\r\n                                    </h3>\r\n                                    <span>\r\n                                        {char.species}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n                \r\n            <Pagination />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;","export default __webpack_public_path__ + \"static/media/logo.adf74e0d.png\";","import React, {useState, useContext} from 'react';\r\nimport {DataContext} from '../../store';\r\n\r\nconst ModalChar = ({data}) => {\r\n    const {setActive} = useContext(DataContext)\r\n\r\n    const [LastLocation] = useState(data.episode)\r\n    const [LocationResidents] = useState(data.location.residents)\r\n    const [OriginResidents] = useState(data.origin.residents)\r\n    const [activeClickChar, setActiveclickChar] = useState(true)\r\n    const [OriginDimension] = useState(data.origin.dimension)\r\n    const [LocationDimension] = useState(data.location.dimension)\r\n\r\n    var last = [...LastLocation].pop();\r\n   \r\n    \r\n    const CloseModal = () => {\r\n        setActive(true)\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal_left\">\r\n            <button onClick={() => CloseModal()}>\r\n                Close\r\n            </button>\r\n                <img src={data.image} alt={data.name} />\r\n                <div className=\"text\">\r\n                    <h3>\r\n                        {data.name}\r\n                    </h3>\r\n                    <span>\r\n                        {data.species}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal_right\">\r\n                <div className=\"modal_texts\">\r\n                    <div className=\"first\">\r\n                        <h3>\r\n                            About\r\n                        </h3>\r\n                        <p>\r\n                            {data.name} is a {data.gender} {data.species}.\r\n                            {data.gender === \"Male\"? \"He\": \"She\"} is <span className=\"status\">{data.status}</span> and well.\r\n                            Last seen in {last.air_date}.\r\n\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"second\">\r\n                        <h3>Origin</h3>\r\n                        <p>\r\n                            <span className=\"planet\">Planet</span>\r\n                            <span className=\"planet-name\">{data.origin.name}</span>\r\n                            <span className=\"planet-dimension\">{LocationDimension === null? '': LocationDimension}</span>\r\n                        </p>\r\n                        <span className=\"reidents\">{OriginResidents?.length}</span>\r\n                    </div>\r\n                    <div className=\"third\">\r\n                        <h3>\r\n                            Location\r\n                        </h3>\r\n                        <p>\r\n                            <span className=\"planet\">Planet</span>\r\n                            \r\n                            <span className=\"planet-name\">{data.location.name}</span>\r\n                            <span className=\"planet-dimesion\">{OriginDimension === null? '': OriginDimension}</span>\r\n                        </p>\r\n                        <span className=\"reidents\">{LocationResidents?.length}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalChar;","import React, {useContext} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Results from './Results';\r\nimport Logo from '../image/logo.png';\r\nimport {DataContext} from '../store';\r\nimport ModalChar from '../Components/ModalChar';\r\nimport LoaderView from '../Components/LoaderView';\r\n\r\nconst Main = () => {\r\n    const {active, data, loader, errpApi, infos } = useContext(DataContext)\r\n\r\n    return (\r\n        <div className={`${active ? '': 'modal-effect'} ${loader? 'modal-effect': ''}`}>\r\n            <div className={`main ${active? '': 'active-blur'} ${loader? 'active-blur-loader': ''}`}>\r\n             <img className=\"logo\" src={Logo} alt=\"logo rick and morty\" />\r\n                <Switch>\r\n                    <Route exact path=\"/inGaiaTest\">\r\n                       <Home />\r\n                    </Route>\r\n                    <Route  path=\"/inGaiaTest/characters\">\r\n                       <Results />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            {active? '' : \r\n               <div className=\"all-body\">\r\n                    <ModalChar data={data} />\r\n               </div>\r\n            }\r\n            {loader ? <div className=\"loading\">\r\n                    <LoaderView  />\r\n                </div>: infos.length > 0 && <Redirect to=\"/inGaiaTest/characters\" />\r\n                \r\n            }\r\n        </ div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './style/imports.scss';\nimport {DataContextProvider} from './store'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport Main from './pages/main'\n\nfunction App() {\n  \n     \n      \n  return (\n    <DataContextProvider>\n        <Router>\n         <Main />\n      </Router>\n    </DataContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}